1.application.properties文件中的属性可以被任何地方引用
	java类，为类中的单个属性赋值:@Value("${属性名}")
	        设置该类为资源类并生成相应的bean，添加如下类标签
			@Configuration                                                              表明这是一个配置文件
			@ConfigurationProperties(prefix="spring")                                   同一属性的前缀名，比如资源文件为spring.name，类中属性为name,此时的同一前缀就为spring
			@PropertySource(value="classpath:application.properties")                   引入单个资源文件，引入多个资源文件为@PropertySources，当该资源文件与application资源文件冲突时，以application为准
			只会给属性匹配的赋值，不同的为null
	propertise资源文件、xml文件(包括pom文件)都可以直接引用。引用方式为：${属性名}
2.pom.xml文件中的属性可以被引用
	可以被pom自身引用，引用方式为：${属性名}
	可以被资源文件引用(properties、xml),引用方式：@属性名@      必须在pom中开启资源的过滤
4.自定义资源文件可以被类和xml引用(类同上)
	xml文件引用properties文件：
	<context:property-placeholder location="classpath:dubbo.properties" />   引入资源文件，使用${属性名}代替
	xml文件引用xml文件
	<import resource="classpath:dubbo.xml"/>
