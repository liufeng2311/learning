1.创建一个git仓库                       git init

2.将工作区的内容添加到暂存区            git add .                            (提交修改或新增的文件，但不提交删除的)
                                        git add -u                           (提交修改或删除的文件，但不提交新增文件 u代表update)
										git add -A                           (提交所有文件，包括新增、修改和删除 -A代表All)
										git add *                            (提交所有文件，包括新增、修改和删除 *是正则表达式，代表所有)

3.将暂存区的所有内容提交至本地方库      git commit -m "注释语句"             (提交时必须有-m参数以及注释，m表示comment)

4.将本地仓库与GitHub的仓库关联          git remote add origin "远程仓库地址"  (添加远程仓库的位置，并为该仓库设置唯一一个ID，
                                                                               之后直接使用ID对该远程仓库进行操作，默认第一个仓库ID为origin)

5.更新远程仓库内容至本地仓库            git pull origin master              (获取origin仓库master分支的最新内容与当前分支合并)

6.上传本地仓库                          git push -u origin master            (将本地分支内容推送到origin仓库的master分支)


git fetch和git pull的区别？
git fetch 更新下的内容并未和本地仓库合并，工作区内容不改变
1.git fetch <远程主机名>
  git fetch origin                                         将远程主机origin的全部更新取回本地（包括所有分支）

2.git fetch <远程主机名> <分支名>
  git fetch origin master                                  将远程主机origin的master分支的更新取回本地，信息存放在FETCH_HEAD分支中
  git log -p FETCH_HEAD                                    查看从远程主机更新来下的内容
  git checkout FETCH_HEAD                                  切换到FETCH_HEAD分支，查看远程服务器最新内容
  git merge FETCH_HEAD                                     合并FETCH_HEAD到当前分支
3.git fetch <远程主机名> <分支名>:<本地分支名>
  git fetch origin master:dev                               将远程主机origin中master分支的内容放在本地dev分支中
  git checkout dev                                          切换到dev分支，查看其内容
git pull  更新下的内容和本地仓库进行合并，工作区内容改变
1.git pull <远程主机名> <远程分支>:<本地分支名>
  git pull origin master:dev                                 将远程主机origin中master分支的内容与本地仓库dev分支合并
  git pull origin master                                     如果合并到当前分支，则可以省略冒号和之后的
  
git merge 和 git rebase的区别
git merge不会破坏被合并的分支，生成一个新的commit节点分别指向两个不同的父节点
git rebase会破坏被合并的分支，不生成新的commit节点，将主分支分支后的commit节点连接到被合并分支的最后一个commit节点，生成新的主分支
git pull origin master  默认使用的是meger
git pull -r origin master  通过设置-r参数来改变合并方式  

