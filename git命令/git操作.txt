1.git使用中文文件名会存在显示乱码情况
2.新建文件的管理：
	git status 只会显示一级目录出现的文件，比如123/123.txt,此时只显示123这个文件夹
	git clean -f ：删除首次新建未被跟踪的文件
	git clean -d：删除首次新建未被跟踪的文件夹
	git clean -ndf：显示将要被删除的首次新建未被跟踪的文件夹和文件
3. 暂存区文件管理
    git reset HEAD -- <file>   撤销提交到暂存区的文件，将版本库的文件更新到暂存区，不会对暂存区造成影响
4. 工作区文件管理
	git checkout -- <file>     将暂存区的文件更新到工作区，如果暂存区没有，则将版本库的文件更新到暂存区(撤销本次修改到开始状态)
5. 查看提交记录
	git log   查看commit记录
	git log  --pretty=online  查看commit记录，只显示commit的ID和提交信息
6. 版本回滚
	git reset --soft HEAD    仓库回滚到指定版本，暂存区和工作区不改变
	git reset --mixed HEAD   仓库、缓存区回滚到指定版本，工作区不变
	git reset --hard HEAD    仓库、缓存、工作区都回滚到指定版本
7. 版本的确定
	HEAD表示当前所在的版本，通常指正在使用的版本
	HEAD^表示上一个版本
	HEAD^2表示上上个版本
	我们也可以通过commit的ID来确定版本
8. 查看执行过的git命令
	git reflog
9. 查看远程库的信息
	git remote -v
10.推送本地分支到远程分支
	git push <远程主机名> <本地分支名> : <远程分支名>
	git push origin master : master        将本地的master分支推送到远程的master分支
	git push origin master                 若没有写远程分支，则默认远程分支为master，远程若不存在master分支，则创建
	git push origin : master               将一个空分支推送到远程master分支，相当于删除远程master分支，等同于git push origin --delete master
	git push origin --delete master        删除远程的master分支
	git push origin                        若该分支与远程分支存在追踪关系，则远程分支和本地分支都可以省略
	git push                               若只有一个远程分支，且存在跟踪关系，则可以省略远程主机和分支
	git push -u origin master              若存在多个对应的远程主机，则可以使用-u设置默认的主机，之后使用git push 即可
11.查看每个分支的对应关系
	git branch -vv                         查看每个分支的对应关系
12.拉取远程别的分支到本地新建分支
	git checkout -b <本地分支名>  <远程分支名>
	git checkout -b dev origin/dev         本地新建dev分支，并将远程dev分支代码拉到本地
13.设置当前分支对应的远程分支
	git branch -u <远程分支名>
	git branch -u origin/dev                关联该分支到远程dev分支
14.删除分支
	git branch -d dev                        删除本地dev分支
	git push origin :dev                     删除远程dev分支
15.创建分支
	git branch 
   