1.springBoot添加mybatis依赖:

        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.1.1</version>
        </dependency>
		
2.springBoot添加oracle驱动依赖:(maven不会自动下载oracle驱动，需要手动下载，并打包到本地仓库。下载地址如下：https://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html)
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>11.2.0.1.0</version>
        </dependency>
		
3.添加jar包到maven本地仓库:

		 切换到需要打包的jar的目录
		 mvn install:install-file
		 -DgroupId=groupId名
		 -DartifactId=artifactId名
		 -Dversion=版本号
		 -Dpackaging=jar(打包方式，默认都是jar包)
		 -Dfile=jar包名
		 
  添加oracle驱动到本地仓库，方法如下：
  
         切换到ojdbc6.jar所在的目录
		 mvn install:install-file 
		 -DgroupId=com.oracle 
		 -DartifactId=ojdbc6 
		 -Dversion=11.2.0.1.0 
		 -Dpackaging=jar 
		 -Dfile=ojdbc6.jar
		 
4.添加数据库相关配置

         application.properties文件里配置数据库连接信息:
         spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
         spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:liufeng
         spring.datasource.username=liufeng
         spring.datasource.password=zmj227LF
		 
5.添加mybatis相关配置

         application.properties文件里配置mybatis信息:
		 mybatis.mapperLocations=classpath*:mapper/*.xml(设置xml的位置，否则mapper接口找不到对应的xml文件)
		 springBoot项目启动类中配置mybatis信息：
		 @MapperScan("com.demo.mapper")(该配置的作用是生成并注入mapper的实例对象)
		 
6.通过mybatis-generator插件自动生成数据库中表对应的model、mapper、mapper.xml,添加插件依赖如下:

		<plugin>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-maven-plugin</artifactId>
			<version>1.3.7</version>
		</plugin>
		
7.在resources文件下创建自动生成工具的xml文件(具体内容见mybatis-generator仓库)，文件名自取：genreatorConfig.xml(自定义即可)

8.运行mybatis-generator：genreator命令，然后更新maven项目即可看到生成的文件

注意点：
1.@RestController=@ResponseBody ＋ @Controller
2.@Autowired不必写属性的getter和setter方法

	



		
 